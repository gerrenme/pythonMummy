from random import choice
from config import facts_about_python, task_lib


class MessageCreator:
    @staticmethod
    def create_progress_message(course: str, interview_task: str, notebook: str) -> str:
        # –Ω–µ –¥–≤–∏–∏–≥–∞—Ç—å. —É –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π f-—Å—Ç—Ä–æ–∫–∏ –∫–æ–Ω—á–µ–Ω–Ω–∞—è —Ç–∞–±—É–ª—è—Ü–∏—è, –ø—Ä–∏—à–ª–æ—Å—å —Ç–∞–∫
        message: str = (f"""Your score so far: 
                \b\bCourse {course} - In progress‚òØ
                \b\bInterview Task {interview_task} - In progress‚òØ
                \b\bNotebook {notebook} - In progress‚òØÔ∏é """)

        return message

    def create_leaderboard_list(self):
        pass

    @staticmethod
    def create_random_fact() -> str:
        message: str = f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç ‚Ññ{choice(facts_about_python)} –ü—Ä–∏–∫–æ–ª—å–Ω–æ, –ø—Ä–∞–≤–¥–∞?"

        return message

    @staticmethod
    def create_interview_list(interviews: dict) -> str:
        message: list[str] = ["–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω –≤–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:\n\n"]
        for name, val in interviews.items():
            message.append(f"{'üü•' if val == 0 else 'üü¢'} {name} -- {task_lib[name][0]}. {task_lib[name][1]}")

        message.append(f"–í—ã —Ä–µ—à–∏–ª–∏ {round(sum(interviews.values()) / len(interviews))}% –∑–∞–¥–∞—á. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏, "
                       f"–∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å")
        return "\n".join(message)
